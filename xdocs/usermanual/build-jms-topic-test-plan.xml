<?xml version="1.0"?>
<!--
   $Header$
   Copyright 2001-2005 The Apache Software Foundation
 
   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at
 
       http://www.apache.org/licenses/LICENSE-2.0
 
   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
-->
<!DOCTYPE document
[
<!ENTITY sect-num '12'>
]>
<document prev="build-jms-point-to-point-test-plan.html" next="build-monitor-test-plan.html" date="$Date: 2005-06-18 11:04:45 -0700 (Sat, 18 Jun 2005) $">

<properties>
  <title>User's Manual: Building a JMS (Java Messaging Service) Test Plan</title>
</properties>

<body>

<section name="&sect-num;. Building a JMS Topic Test Plan" anchor="building">
<p>In this section, you will learn how to create a 
<a href="build-test-plan.html">Test Plan</a> to test JMS Providers. You will
create five subscribers and one publisher. You will create 2 thread groups and set
each one to 10 iterations. The total messages is (6 threads) x (1 message) x 
(repeat 10 times) = 60 messages. To construct the Test Plan, you will use the 
following elements:
<a href="test_plan.html#thread_group">Thread Group</a>,
<complink name="JMS Publisher"/>,
<complink name="JMS Subscriber"/>, and
<complink name="Graph Results"/>.</p>

<p>General notes on JMS. There are currently two JMS samplers. One uses JMS topics
and the other uses queues. Topic messages are commonly know as pub/sub messaging.
It is generally used in cases where a message is publish by a producer and
consumed by multiple subscribers. Queue messaging is generally used for transactions
where the sender expects a response. Messaging systems are quite different from
normal HTTP requests. In HTTP, a single user sends a request and gets a response.
Messaging system can work in sychronous and asynchronous mode.</p>

</section>

<section name="&sect-num;.1 Adding Users" anchor="adding_users">
<p>The first step is add a <a href="test_plan.html#thread_group">Thread Group</a>
 element.  The Thread Group tells JMeter the number of users you want to simulate,
 how often the users should send requests, and the how many requests they should 
send.</p>

<p>Go ahead and add the ThreadGroup element by first selecting the Test Plan,
clicking your right mouse button to get the Add menu, and then select
Add --&gt; ThreadGroup.</p>

<p>You should now see the Thread Group element under Test Plan.  If you do not
see the element, then "expand" the Test Plan tree by clicking on the
Test Plan element.</p>

<p>Next, you need to modify the default properties.  Select the Thread Group element
in the tree, if you have not already selected it. You should now see the Thread
Group Control Panel in the right section of the JMeter window (see Figure &sect-num;.1
below)</p>

<figure image="webtest/threadgroup.png">
Figure &sect-num;.1. Thread Group with Default Values</figure>

<p>Start by providing a more descriptive name for our Thread Group. In the name
field, enter Subscribers.</p>

<p>Next, increase the number of users (called threads) to 5.</p>

<p>In the next field, the Ramp-Up Period, leave the the default value of 0
seconds.  This property tells JMeter how long to delay between starting each
user. For example, if you enter a Ramp-Up Period of 5 seconds, JMeter will
finish starting all of your users by the end of the 5 seconds.  So, if we have
5 users and a 5 second Ramp-Up Period, then the delay between starting users
would be 1 second (5 users / 5 seconds = 1 user per second).  If you set the
value to 0, JMeter will immediately start all users.</p>

<p>Clear the checkbox labeled "Forever", and enter a value of 10 in the Loop
Count field.  This property tells JMeter how many times to repeat your test.
If you enter a loop count value of 0, then JMeter will run your test only
once. To have JMeter repeatedly run your Test Plan, select the Forever
checkbox.</p>

<p>Repeat the process and add another thread group. For the second thread
group, leave the number of threads 1 and change the iteration to 10.</p>

<note>In most applications, you have to manually accept
changes you make in a Control Panel.  However, in JMeter, the Control Panel
automatically accepts your changes as you make them.  If you change the
name of an element, the tree will be updated with the new text after you
leave the Control Panel (for example, when selecting another tree element).</note>


</section>

<section name="&sect-num;.2 Adding JMS Subscriber and Publisher" anchor="adding_subscriber_publisher">

<p>Make sure the required jar files are in JMeter's lib directory. If they are
not, shutdown JMeter, copy the jar files over and restart JMeter.</p>

<p>Start by adding the sampler <complink name="jms subscriber"/>
to the Jakarta Users element (Add --&gt; Sampler --&gt; JMS Subscriber).
Then, select the JMS Subscriber element in the tree and edit the following properties
:
<ol>
<li>Change the Name field to "sample subscriber".</li>
<li>If the JMS provider uses the jndi.properties file, check the box</li>
<li>Enter the name of the InitialContextFactory class.</li>
<li>Enter the provider URL. This is the URL for the JNDI server, if there is one</li>
<li>Enter the name of the connection factory. Please refer to the documentation
of the JMS provider for the information</li>
<li>Enter the name of the message topic</li>
<li>If the JMS provider requires authentication, check "required" and enter the 
username and password. For example, Orion JMS requires authentication, while ActiveMQ
and MQSeries does not</li>
<li>Enter 10 in "Number of samples to aggregate". For performance reasons, the sampler
will aggregate messages, since small messages will arrive very quickly. If the sampler
didn't aggregate the messages, JMeter wouldn't be able to keep up.</li>
<li>If you want to read the response, check the box</li>
<li>There are two client implementations for subscribers. If the JMS provider 
exhibits zombie threads with one client, try the other.</li>
</ol>
</p>

<figure image="jms/jms_sub.png">
Figure &sect-num;.2. JMS Subscriber</figure>

<ol>
<li>Change the Name field to "sample publisher".</li>
<li>If the JMS provider uses the jndi.properties file, check the box</li>
<li>Enter the name of the InitialContextFactory class.</li>
<li>Enter the provider URL. This is the URL for the JNDI server, if there is one</li>
<li>Enter the name of the connection factory. Please refer to the documentation
of the JMS provider for the information</li>
<li>Enter the name of the message topic</li>
<li>If the JMS provider requires authentication, check "required" and enter the 
username and password. For example, Orion JMS requires authentication, while ActiveMQ
and MQSeries does not</li>
<li>Enter 10 in "Number of samples to aggregate". For performance reasons, the sampler
will aggregate messages, since small messages will arrive very quickly. If the sampler
didn't aggregate the messages, JMeter wouldn't be able to keep up.</li>
<li>Select the appropriate configuration for getting the message to publish. If you
want the sampler to randomly select the message, place the messages in a directory
and select the directory using browse.</li>
<li>Select the message type. If the message is in object format, make sure the
message is generated correctly.</li>
</ol>
<p></p>
<figure image="jms/jms_pub.png">
Figure &sect-num;.3. JMS Publisher</figure>


</section>

<section name="&sect-num;.3 Adding a Listener to View Store the Test Results" anchor="adding_listener">
<p>The final element you need to add to your Test Plan is a
 <a href="component_reference.html#listeners">Listener</a>. This element is
responsible for storing all of the results of your HTTP requests in a file and presenting
a visual model of the data.</p>

<p>Select the Jakarta Users element and add a <complink name="Graph Results"/> listener (Add --&gt; Listener
--&gt; Graph Results).  Next, you need to specify a directory and filename of the
output file.  You can either type it into the filename field, or select the
Browse button and browse to a directory and then enter a filename.</p>

<figure image="graph_results.png">
Figure &sect-num;.4. Graph Results Listener</figure>

</section>

<section name="&sect-num;.4 Saving the Test Plan" anchor="saving">
<p>Although it is not required, we recommend that you save the Test Plan to a
file before running it.  To save the Test Plan, select Save Test Plan from the
File menu (with the latest release, it is no longer necessary to select the
Test Plan element first).</p>

<note>JMeter allows you to save the entire Test Plan tree or
only a portion of it.  To save only the elements located in a particular "branch"
of the Test Plan tree, select the Test Plan element in the tree from which to start
the "branch", and then click your right mouse button to access the Save As menu item.
Alternatively, select the appropriate Test Plan element  and then select Save As from
the Edit menu.
</note>

</section>

<section name="&sect-num;.5 Running the Test Plan" anchor="running">

<p>From the Run menu, select Run.</p>

<note>JMeter lights up a green square in the upper-right-hand corner to indicate if a test is
currently running.  The square is turned gray when all tests stop.  Even after you select "stop",
the green light will stay on until all test threads have exited.</note>

<p>Once JMeter has finished running your Test Plan, select Stop from the
Run menu.</p>
<p>If you selected a file to save the results to in your listener, then you will have a file that can be
opened in any visualizer.  Each visualizer will display the results in it's own fashion.</p>

<note>It is possible to have the same file open in more than one visualizer.  This is not a problem.  JMeter
will ensure during the test run that no sample is recorded to the same file more than once.</note> 

</section>

</body>
</document>
