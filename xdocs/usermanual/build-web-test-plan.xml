<?xml version="1.0"?>
<document>

<properties>
  <title>User's Manual: Building a Web Test Plan</title>
</properties>

<body>

<section name="5. Building a Web Test Plan" anchor="building">
<p>In this section, you will learn how to create a basic
<a href="build-test-plan.html">Test Plan</a> to test a Web site.  You will
create five users that send requests to two pages on the Jakarta Web site.
Also, you will tell the users to run their tests twice. So, the total number of
requests is (5 users) x (2 requests) x (repeat 2 times) = 20 HTTP requests. To
construct the Test Plan, you will use the following elements:
<a href="test_plan.html#thread_group">Thread Group</a>,
<complink name="HTTP Request"/>,
<complink name="HTTP Request Defaults"/>, and
<complink name="File Reporter"/>.</p>

<p>For a more advanced Test Plan, see
<a href="build-adv-web-test-plan.html">Building an Advanced Web Test Plan</a>.</p>
</section>

<!--
<p>After starting JMeter, you see three items in the tree: Root (the parent of
all tree elements), Test Plan (you place all of your elements here), and
WorkBench (a temporary place to store your elements while constructing a Test
Plan).</p>-->

<section name="5.1 Adding Users" anchor="adding_users">
<p>The first step you want to do with every JMeter Test Plan is to add a
<a href="test_plan.html#thread_group">Thread Group</a> element.  The Thread Group tells
JMeter the number of users you want to simulate, how often the users should send
requests, and the how many requests they should send.</p>

<p>Go ahead and add the ThreadGroup element by first selecting the Test Plan,
and then from the Edit menu, select Add --&gt; ThreadGroup.</p>

<note>You can also access the Edit menu by selecting an element
and then clicking your right mouse button.</note>

<p>You should now see the Thread Group element under Test Plan.  If you do not
see the element, then "expand" the Test Plan tree by double-clicking on the
Test Plan element.</p>

<p>Next, you need to modify the default properties.  Select the Thread Group element
in the tree, if you have not already selected it. You should now see the Thread
Group Control Panel in the right section of the JMeter window (see Figure 5.1
below)</p>

<figure image="../images/screenshots/webtest/threadgroup.gif">
Figure 5.1. Thread Group with Default Values</figure>

<p>Start by providing a more descriptive name for our Thread Group. In the name
field, enter Jakarta Users.</p>

<p>Next, increase the number of users (called threads) to 5.</p>

<p>In the next field, the Ramp-Up Period, leave the the default value of 0
seconds.  This property tells JMeter how long to delay between starting each
user. For example, if you enter a Ramp-Up Period of 5 seconds, JMeter will
finish starting all of your users by the end of the 5 seconds.  So, if we have
5 users and a 5 second Ramp-Up Period, then the delay between starting users
would be 1 second (5 users / 5 seconds = 1 user per second).  If you set the
value to 0, then JMeter will immediately start all of your users.</p>

<p>Finally, clear the checkbox labeled "Forever", and enter a value of 2 in
the Loop Count field.  This property tells JMeter how many times to repeat your
test. If you enter a loop count value of 0, then JMeter will run your test only
once. To have JMeter repeatedly run your Test Plan, select the Forever
checkbox.</p>

<note>In most applications, you have to manually accept
changes you make in a Control Panel.  However, in JMeter, the Control Panel
automatically accepts your changes as you make them.  If you change the
name of an element, the tree will be updated with the new text after you
leave the Control Panel (for example, when selecting another tree element).</note>

<p>See Figure 5.2 for the completed Jakarta Users Thread Group.</p>

<figure image="../images/screenshots/webtest/threadgroup2.gif">
Figure 5.2. Jakarta Users Thread Group</figure>

</section>

<section name="5.2 Adding Default HTTP Request Properties" anchor="adding_defaults">
<p>Now that we have defined our users, it is time define the tasks that they
will be performing.  In this section, you will specify the default settings
for your HTTP requests.  And then, in section 5.3, you will add HTTP Request
elements which use some of the default settings you specified here.</p>

<p>Begin by selecting the Jakarta Users element. From the Edit menu, choose
Add --&gt; Config Element --&gt; HTTP Request Defaults. Then, select this new
element to view its Control Panel (see Figure 5.3).</p>

<figure image="../images/screenshots/webtest/http-defaults1.gif">
Figure 5.3. HTTP Request Defaults</figure>

<p>
Like most JMeter elements, the <complink name="HTTP Request Defaults"/> Control
Panel has a name field that you can modify.  In this example, leave this field with
the default value.</p>

<p>Skip to the next field, which is the Web Server's Server Name/IP. For the
Test Plan that you are building, all HTTP requests will be sent to the same
Web server, jakarta.apache.org.  Enter this domain name into the field.
This is the only field that we will specify a default, so leave the remaining
fields with their default values.</p>

<note>The HTTP Request Defaults element does not tell JMeter
to send an HTTP request.  It simply defines the default values that the
HTTP Request elements use.</note>

<p>See Figure 5.4 for the completed HTTP Request Defaults element</p>

<figure image="../images/screenshots/webtest/http-defaults2.gif">
Figure 5.4. HTTP Defaults for our Test Plan</figure>

</section>

<section name="5.3 Adding Cookie Support" anchor="adding_cookie_support">
<p>Nearly all web testing should use cookie support, unless your application
specifically doesn't use cookies.  To add cookie support, simply add an
<complink name="HTTP Cookie Manager"/> to each <a href="test_plan.html#thread_group">Thread
Group</a> in your test plan.  This will ensure that each thread gets its own
cookies, but shared across all <complink name="HTTP Request"/> objects.</p>

<p>To add the <complink name="HTTP Cookie Manager"/>, simply select the
<a href="test_plan.html#thread_group">Thread Group</a>, and choose Add --&gt;
Config Element --&gt; HTTP
Cookie Manager, either from the Edit Menu, or from the right-click pop-up menu.</p>
</section>


<section name="5.4 Adding HTTP Requests" anchor="adding_requests">

<p>In our Test Plan, we need to make two HTTP requests. The first one is for the
Jakarta home page (http://jakarta.apache.org/), and the second one is for the
Project Guidelines page (http://jakarta.apache.org/site/guidelines.html).</p>

<note>JMeter sends requests in the order that you add them
to the tree.</note>

<p>Start by adding the first <complink name="HTTP Request"/>
to the Jakarta Users element (Add --&gt; Generative Controller --&gt; HTTP Request).
Then, select the HTTP Request element in the tree and edit the following properties
(see Figure 5.5):
<ol>
<li>Change the Name field to "Home Page".</li>
<li>Set the Path field to "/".  Remember that you do not have to set the Server
Name field because you already specified this value in the HTTP Request Defaults
element.</li>
</ol>
</p>

<figure image="../images/screenshots/webtest/http-request1.gif">
Figure 5.5. HTTP Request for Jakarta Home Page</figure>

<p>Next, add the second HTTP Request and edit the following properties (see
Figure 5.56:
<ol>
<li>Change the Name field to "Project Guidelines".</li>
<li>Set the Path field to "/site/guidelines.html".</li>
</ol>
</p>

<figure image="../images/screenshots/webtest/http-request2.gif">
Figure 5.6. HTTP Request for Jakarta Project Guidelines Page</figure>

</section>

<section name="5.5 Adding a File Reporter to Store the Test Results" anchor="adding_file_reporter">
<p>The final element you need to add to your Test Plan is a
<complink name="File Reporter"/> Listener. This element is
responsible for storing all of the results of your HTTP requests in a file.</p>

<p>Select the Jakarta Users element and add a File Reporter (Add --&gt; Listener
--&gt; File Reporter).  Next, you need to specify a directory and filename of the
output file.  You can either type it into the filename field, or select the
Browse button and browse to a directory and then enter a filename.  Leave
all of the other fields with their default values (see Figure 5.7).</p>

<figure image="../images/screenshots/webtest/file-reporter.gif">
Figure 5.7. File Reporter Listener</figure>

</section>

<section name="5.6 Saving the Test Plan" anchor="saving">
<p>Although it is not required, we recommend that you save the Test Plan to a
file before running it.  To save the Test Plan, select the Test Plan element
in the tree. Then, select Save As from the File menu.</p>

<note>JMeter allows you to save the entire Test Plan tree or
only a portion of it.  JMeter uses the currently selected tree element
and saves all elements located in that particular "branch" of the tree.
Because you want to save all of the elements, you must select the Test Plan
element before selecting File --&gt; Save As.</note>

<note>You can also access the Save As menu item by selecting an
element and then clicking your right mouse button.</note>

</section>

<section name="5.7 Running the Test Plan" anchor="running">
<p>Before running the Test Plan, You have to manually open the File Reporter
output file. Select the File Reporter tree element, and select the Open button,
which is located at the bottom of the Control Panel.</p>

<p>From the Run menu, select Run.</p>

<note>The current version of JMeter does not let you know
when it has finished running your Test Plan.  You have to determine this
by viewing the console output or the File Reporter output file.</note>

<p>Once JMeter has finished running your Test Plan, select Stop from the
Run menu.</p>
<p>Next, you need to close the File Reporter output file.  Select
the File Reporter tree element, and select the Close button on the
Control Panel.</p>
<p>To view the results, open the File Reporter output file in a text
editor (see Figure 5.8). The format is [URL][space][Response time in milliseconds].</p>
<p>Alternatively, you can use the <complink name="Data Analyzer"/> for a graphical
view of the data.</p>

<figure image="../images/screenshots/webtest/file-reporter-results.gif">
Figure 5.8. Test Plan Results</figure>

</section>

</body>
</document>
