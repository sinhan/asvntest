Eclipse settings
----------------
The following files should be excluded from build output:
*.metaprops
See Preferences/Java/Building/Output Folder/Filtered Resources


Eclipse.classpath
-----------------
[This has been tested with Eclipse 3.2. It may not work with other versions.]

The file eclipse.classpath is intended as a starter .classpath file 
for building JMeter using Eclipse version 3.  

Note that Eclipse does not handle RMI compilations, 
nor is it easy to use for creating jar files.

However, it is easy to use Eclipse to run Ant.

The following targets may prove useful:

  compile-rmi - compiles the RMI files that Eclipse ignores
  package-only - creates the jars
  package - compiles everything and then packages it

Finishing the build using Ant
-----------------------------

Find the build.xml file in the project, 
right click on it, and click "Run As --> Ant Build".

Make sure you select the "package" target.

This will compile any remaining classes (e.g. the RMI ones),
and then create all the jars.

Now refresh the project (you should add this to the Ant build properties)

Launching from Eclipse
----------------------

These instructions assume you have configured Eclipse to use the classpath
as suggested in eclipse.classpath, and have run "ant package" to compile
the RMI classes and build the jars.

Create a new Java Application launch configuration.

On the Main tab, enter the following as the main class:

  org.apache.jmeter.NewDriver
  
On the Arguments tab, in the Working Directory area, pick the radio
button next to "Other" and enter the following in the text box:

  ${workspace_loc}/jmeterproject/bin
  
 where "jmeterproject" is the name of the JMeter project.
 
 [It would be nicer to use ${project_loc}/bin 
 but unfortunately the Eclipse Debug view does not seem to preserve any of the project variables]