<project name="JMeter" default="all" basedir=".">

  <!-- Where the class files should live -->
  <property name="classes.dest.dir" value="bin/classes"/>
  <!-- Where the Sources live -->
  <property name="sources.src.dir" value="src"/>
  <!-- Where the API documentation lives -->
  <property name="docs.api.dest.dir" value="docs/api"/>
  <property name="version" value="1.7Beta3"/>
  <property name="docs.src" value="./xdocs"/>
  <property name="docs.dest" value="./docs"/>
  <property name="printable_docs.dest" value="./printable_docs"/>
  <property name="optimize" value="on"/>
  <property name="tools.jar" value="${java.home}/lib/tools.jar"/>

  <!-- Build classpath -->
  <path id="classpath">
	<fileset dir="./lib">
	 <include name="**/*.jar"/>
	</fileset>
	  <pathelement location="${tools.jar}"/>
  </path>

  <path id="testClasspath">
		<path refid="classpath"/>
		<pathelement location="./bin/ApacheJMeter.jar"/>
  </path>


	<!--
	- Check for optional libraries, JavaMail and JSSE
	- Need two targets as JavaMail depends on JAF as well.
	-->
	<target name="check.optional.libs1">
	  <available classname="com.sun.net.ssl.internal.ssl.Provider"
					 property="jsse.present">
		 <classpath refid="classpath"/>
	  </available>
	  <available classname="javax.mail.Transport"
					 property="javamail.present">
		 <classpath refid="classpath"/>
	  </available>
	  <available classname="iaik.protocol.https.Handler"
					 property="isasilk.present">
		 <classpath refid="classpath"/>
	  </available>
	</target>

	<!--
	- Check for optional libraries, JAF
	- Need two targets as JavaMail depends on JAF as well.
	-->
	<target name="check.optional.libs2" depends="check.optional.libs1"
		  if="javamail.present">
	  <available classname="javax.activation.DataHandler"
					 property="javamail.complete"/>
	</target>

	<!--
	- Check for anakia task
	-->
	<target name="check.anakia">
	  <available classname="org.apache.velocity.anakia.AnakiaTask"
					 property="AnakiaTask.present"/>
	</target>

	<target name="no.anakia" depends="check.anakia" unless="AnakiaTask.present">
	  <echo>
		 AnakiaTask is not present, documentation will not be generated.
	  </echo>
	</target>

	<target name="ssl.message" depends="check.optional.libs1,iaik.message" unless="jsse.present">
	  <echo message="Classes for SSL not found in classpath"/>
	</target>

	<target name="iaik.message" depends="check.optional.libs1" unless="isasilk.present">
	  <echo message="Classes for IAIK iSaSiLk not found in classpath"/>
	</target>

	<target name="mail.message" depends="check.optional.libs2" unless="javamail.complete">
	  <echo message="Classes for Mail support not found in classpath"/>
	</target>

	<!--
	- Compiles the source into class files - dumping results into the
	- bin/clases directory
	-->
	<target name="compile" depends="mail.message,ssl.message">
		<mkdir dir="${classes.dest.dir}"/>
		<copy tofile="${sources.src.dir}/org/apache/jmeter/util/JMeterUtils.java_temp"
				file="${sources.src.dir}/org/apache/jmeter/util/JMeterUtils.java"
				overwrite="yes"/>
		<replace file="${sources.src.dir}/org/apache/jmeter/util/JMeterUtils.java"
					token="@VERSION@"
					value="${version}"/>
		<javac srcdir="${sources.src.dir}"
				 destdir="${classes.dest.dir}"
				 optimize="${optimize}"
				 debug="on"
				 target="1.2">
		  <exclude name="**/*.df*"/>
		  <exclude name="**/*.html"/>
		  <exclude name="**/*.tpr"/>
		  <exclude name="**/*.tws"/>
		  <exclude name="**/make*"/>
		  <exclude name="**/Makefile"/>
		  <exclude name="**/Changelog*"/>
		  <exclude name="**/*.orig"/>
		  <exclude name="org/apache/jmeter/util/JsseSSLManager.java"
					  unless="jsse.present"/>
		  <exclude name="org/apache/jmeter/util/IaikSSLManager.java"
					  unless="isasilk.present"/>
		  <exclude name="org/apache/jmeter/util/keystore/PKCS12KeyStore.java"
					  unless="isasilk.present"/>
		  <exclude name="org/apache/jmeter/util/keystore/DefaultKeyStore.java"
					  unless="jsse.present"/>
		  <exclude name="org/apache/jmeter/visualizers/MailerVisualizer.java"
					  unless="javamail.complete"/>
		  <exclude name="org/apache/jmeter/reporters/MailerResultCollector.java"
					  unless="javamail.complete"/>
		  <classpath refid="classpath"/>
		</javac>
		<copy tofile="${sources.src.dir}/org/apache/jmeter/util/JMeterUtils.java"
				file="${sources.src.dir}/org/apache/jmeter/util/JMeterUtils.java_temp"
				overwrite="yes"/>
	</target>

	<target name="rmi" depends="compile">
	  <rmic classpath="bin/classes" base="bin/classes" classname="org.apache.jmeter.engine.RemoteJMeterEngineImpl"/>
	  <rmic classpath="bin/classes" base="bin/classes" classname="org.apache.jmeter.samplers.RemoteSampleListenerImpl"/>
	</target>

	<!--
	- Generates java-docs
	-->
	<target name="api-docs">
	  <mkdir dir="${docs.api.dest.dir}"/>
	  <javadoc sourcepath="${sources.src.dir}"
				  destdir="${docs.api.dest.dir}"
				  private="yes" author="yes" version="yes"
				  doctitle="Apache JMeter APIs Specification"
				  windowtitle="Apache JMeter API Specification"
				  header="&lt;b&gt;Apache JMeter&lt;/b&gt;&lt;br&gt;&lt;font size='-1'&gt;1.7&lt;/font&gt;"
				  bottom="Copyright &#169; 1998-2001 Apache Software Foundation. All Rights Reserved."
				  packagenames="org.apache.jmeter.*">
		 <classpath refid="classpath"/>
	  </javadoc>
	</target>

	<!--
	- Creates the ApacheJMeter.jar file.
	-->
	<target name="package" depends="compile,rmi">
	  <copy toDir="${classes.dest.dir}/org/apache/jmeter/images">
		 <fileset dir="${sources.src.dir}/org/apache/jmeter/images"/>
	  </copy>
	  <copy toDir="${classes.dest.dir}/org/apache/jmeter/resources">
		 <fileset dir="${sources.src.dir}/org/apache/jmeter/resources">
			<exclude name="*eucJP*"/>
		</fileset>
	  </copy>

	  <jar jarfile="ApacheJMeter.jar" manifest="src/MANIFEST" basedir="${classes.dest.dir}"/>
	</target>

	<!--
	- Copies the jar file to bin/ and everything else needed to run JMeter
	- from bin/.
	-->
	<target name="install" depends="package">
	  <copy file="ApacheJMeter.jar" toFile="bin/ApacheJMeter.jar"/>
	  <delete file="ApacheJMeter.jar"/>
	</target>

	<!--
	- Another name for install(?)
	-->
	<target name="all" depends="install"/>

	<target name="assume_packages_present">
		<property name="jsse.present" value="assume"/>
		<property name="javamail.present" value="assume"/>
		<property name="javamail.complete" value="assume"/>
	</target>

	<!--
	- Creates the distribution packages
	-->
	<target name="dist" depends="assume_packages_present,clean,install">
		<jar jarfile="../ApacheJMeter_${version}.jar" basedir="../" includes="jakarta-jmeter/**" excludes="**/classes/**,**/xdocs/**"/>
		<zip zipfile="../ApacheJMeter_${version}.zip" basedir="../" includes="jakarta-jmeter/**" excludes="**/classes/**,**/xdocs/**"/>
		<tar tarfile="../ApacheJMeter_${version}.tar" basedir="../" excludes="**/classes/**,**/xdocs/**" includes="jakarta-jmeter/**" />
		<gzip zipfile="$../ApacheJMeter_${version}.tar.gz" src="../ApacheJMeter_${version}.tar" />
	</target>

	<!--
	- Deletes old build files.
	-->
	<target name="clean">
	  <delete file="bin/ApacheJMeter.jar"/>
	  <delete dir="${classes.dest.dir}"/>
	  <delete dir="${docs.api.dest.dir}"/>
	</target>


	<target name="docs" depends="no.anakia" if="AnakiaTask.present">
	  <taskdef name="anakia" classname="org.apache.velocity.anakia.AnakiaTask"/>
	  <anakia basedir="${docs.src}" destdir="${docs.dest}/"
				 extension=".html" style="./xdocs/stylesheets/site.vsl"
				 projectFile="./stylesheets/project.xml"
				 excludes="**/stylesheets/**"
				 includes="**/*.xml"
				 lastModifiedCheck="false"
				 velocityPropertiesFile="${docs.src}/velocity.properties"/>
		<copy todir="${docs.dest}">
			<fileset dir="${docs.src}">
				<include name="images/**"/>
				<include name="demos/**"/>
			</fileset>
		</copy>
	</target>

	<target name="printable_docs" depends="no.anakia" if="AnakiaTask.present">
	  <taskdef name="anakia" classname="org.apache.velocity.anakia.AnakiaTask"/>
	  <anakia basedir="${docs.src}" destdir="${docs.dest}/"
				 extension=".html" style="./xdocs/stylesheets/site_printable.vsl"
				 projectFile="./stylesheets/project.xml"
				 excludes="**/stylesheets/**"
				 includes="**/*.xml"
				 lastModifiedCheck="false"
				 velocityPropertiesFile="${docs.src}/velocity.properties"/>

	</target>

	<target name="test" depends="install">
	  <java classname="org.apache.jmeter.junit.AllTests" fork="yes" dir="${basedir}">
		 <classpath refid="testClasspath"/>
		 <arg value="./bin/jmeter.properties"/>
	  </java>
  </target>

</project>
